//
//  HomeView.swift
//  BrewerieSniffer
//
//  Created by Martin Lukacs on 18/03/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the MVVM Xcode Templates
//

import SwiftUI
import Resolver
import SwiftUICombineToolBox

struct HomeView: View {
    @InjectedObject private var viewModel: HomeViewModel
    
    init() {
        UIScrollView.appearance().decelerationRate = .fast
    }
    
    var body: some View {
        containerView.navigationBarTitle("Breweries")
        
    }
}

private extension HomeView {
    var containerView: some View {
        scrollViewContainer
            .fullScreenBackground(with: AppTheme.Colors.background)
    }
}

// MARK: - Search content scrollview
private extension HomeView {
    var scrollViewContainer: some View {
        ScrollViewReader { proxy in
            ScrollView {
                LazyVStack(alignment: .center,
                           spacing: 5,
                           pinnedViews: [.sectionHeaders]) {
                    
                    Section(header: searchBarSection) {
                        ForEach(viewModel.breweries) { brewery in
                            BreweryCell(brewery: brewery)
                                .id(brewery.id)
                        }
                    }
                }
            }
            .pageState(for: viewModel.state)
            .onChange(of: viewModel.selectedFilter) { value in
                guard let id = viewModel.breweries.first?.id else { return }
                DispatchQueue.main.async {
                    proxy.scrollTo(id, anchor: .center)
                }
            }
            
        }
    }
}

// MARK: - Search bar elements
private extension HomeView {
    var searchBarSection: some View {
        VStack {
            HStack {
                SearchBar(query: $viewModel.query).padding()
                Spacer()
            }
            filtersScrollBar()
        }.background(AppTheme.Colors.background)
    }
}

// MARK: - Filter section
private extension HomeView {
    func filtersScrollBar() -> some View {
        let horizontalSpacing: CGFloat = 10
        
        return ScrollView(.horizontal, showsIndicators: false) {
            LazyHStack(spacing: horizontalSpacing) {
                ForEach(BreweryType.allCases, id: \.self) { filter in
                    filterBarElement(wiht: filter)
                }
            }.padding(.horizontal)
        }.padding(.bottom)
    }
}

private extension HomeView {
    func filterBarElement(wiht filter: BreweryType) -> some View {
        HStack {
            if filter != .none {
                Divider()
            }
            Button(action: {
                viewModel.setFilterSelection(for: filter)
            }) {
                FilterCell(title: filter.rawValue,
                           isSelected: viewModel.isCurrentlySelected(for: filter))
            }
        }
    }
}

struct HomeView_Previews: PreviewProvider {
    static var previews: some View {
        UIScenePreview(HomeView())
    }
}
